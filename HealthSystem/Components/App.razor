<!DOCTYPE html>
<html lang="en" style="height:100%;">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="HealthSystem.styles.css" />
    <link href="_content/BlazorCalendar/BlazorCalendar.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <link rel="stylesheet" href="_content/BytexDigital.Blazor.Components.CookieConsent/styles.min.css" />
    <HeadOutlet />
</head>

<body>
    <Routes />
    <script src="_framework/blazor.web.js"></script>

    <script src="_content/AntDesign.Charts/g2plot.min.js"></script>
    <script src="_content/AntDesign.Charts/ant-design-charts-blazor.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

    <script>
        async function getGraphAsImage(){
            const img = await html2canvas(document.getElementsByClassName("displayTable")[0]);
            return img.toDataURL("image/png");
        }

        async function getPageAsImage(){
            document.body.querySelector(".bottom-right-container").style.display="none";
            document.body.querySelector(".bottom-section").style.display="none";
            const img = await html2canvas(document.body);
            document.body.querySelector(".bottom-right-container").style.display="block";
            document.body.querySelector(".bottom-section").style.display="block";
            return img.toDataURL("image/png");
        }

        async function downloadCurrentPageGraph(fileName){
            const image = await getGraphAsImage();
            const link = document.createElement("a");
            link.href= image;
            link.download = fileName || "graph.png";
            link.click();
        }

        function downloadImage(image, fileName){
            const link = document.createElement("a");
            link.href = image;
            link.download = fileName || "image.png";
            link.click();
        }

        function drawGraph(){
            const ctx = document.getElementById('myChart').getContext('2d');
            const backgroundZonesPlugin = {
                id: 'backgroundZones',
                beforeDraw(chart) {
                const { ctx, chartArea: { top, bottom, left, right }, scales: { y } } = chart;

                const zones = [
                    { start: 0, end: 30, color: 'rgba(0, 255, 0, 0.1)' },  
                    { start: 30, end: 70, color: 'rgba(255, 255, 0, 0.1)' },
                    { start: 70, end: 100, color: 'rgba(255, 0, 0, 0.1)' }  
                ];

                zones.forEach(zone => {
                    ctx.save();
                    ctx.fillStyle = zone.color;
                    const zoneTop = y.getPixelForValue(zone.end);
                    const zoneBottom = y.getPixelForValue(zone.start);
                    ctx.fillRect(left, zoneTop, right - left, zoneBottom - zoneTop);
                    ctx.restore();
                });
                }
            };
            Chart.register(backgroundZonesPlugin);

            new Chart(ctx, {
                type: 'line',
                data: {
                labels: ['January', 'February', 'March', 'April', 'May'],
                datasets: [{
                    label: 'Dataset 1',
                    data: [10, 40, 55, 65, 85],
                    borderColor: 'blue',
                    backgroundColor: 'blue',
                    fill: false
                }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                        min: 0,
                        max: 100,
                        }
                    },
                }
            });
        }

        function refreshWithMessage(message){
            alert(message);
            location.reload();
        }
    </script>
</body>

</html>
