@page "/messages/{id:int}"
@using HealthSystem.Data
@using static Data.Utils
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject NavigationManager NavigationManager
@attribute [Authorize]


<div>
    @Message.Content
</div>

@code {
    string userName;
    string userId;
    [Parameter]
    public int Id { get; set; }

    Message? Message;

    protected override async Task OnInitializedAsync()
    {
        var authState = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        userName = authState.User.Identity.Name;
        userId = authState.User.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        using var Context = DbFactory.CreateDbContext();

        Message = Context.Message.SingleOrDefault(x => x.Id == Id && x.ReceiverId == userId);
        if (Message is null)
            NavigationManager.ToAbsoluteUri("/messages");

    }
}
